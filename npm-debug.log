0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.10.3
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/media/files/work/repo/react-observer',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/juji/.npm/react-observer/0.1.0/package.tgz not in flight; packing
9 verbose correctMkdir /home/juji/.npm correctMkdir not in flight; initializing
10 info lifecycle react-observer@0.1.0~prepublish: react-observer@0.1.0
11 silly lifecycle react-observer@0.1.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/juji/.npm/react-observer/0.1.0/package.tgz',
12 verbose tar pack   '/media/files/work/repo/react-observer' ]
13 verbose tarball /home/juji/.npm/react-observer/0.1.0/package.tgz
14 verbose folder /media/files/work/repo/react-observer
15 verbose addLocalTarball adding from inside cache /home/juji/.npm/react-observer/0.1.0/package.tgz
16 verbose correctMkdir /home/juji/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd react-observer@0.1.0
18 verbose afterAdd /home/juji/.npm/react-observer/0.1.0/package/package.json not in flight; writing
19 verbose correctMkdir /home/juji/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/juji/.npm/react-observer/0.1.0/package/package.json written
21 silly publish { name: 'react-observer',
21 silly publish   version: '0.1.0',
21 silly publish   description: 'React Component communication via events. With single observer.',
21 silly publish   main: 'index.js',
21 silly publish   scripts: { test: 'npm test' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+ssh://git@github.com/juji/react-observer.git' },
21 silly publish   keywords:
21 silly publish    [ 'react-component-communication',
21 silly publish      'react-observer',
21 silly publish      'react-event' ],
21 silly publish   author: { name: 'jujiyangasli@gmail.com' },
21 silly publish   license: 'ISC',
21 silly publish   bugs: { url: 'https://github.com/juji/react-observer/issues' },
21 silly publish   homepage: 'https://github.com/juji/react-observer#readme',
21 silly publish   readme: 'react-observer \n===\n\nAn event manager in ReactJs, to handle communication between **components**. <br />\nUsing [observers](https://en.wikipedia.org/wiki/Observer_pattern) as a message-broker between components.\n\nOr you can use it for a general purpose event system.<br />\n\n```\nnpm install --save react-observer\n```\n\nFeatures\n--\n- PubSub\n- request-response\n- namespacing\n\n**What is this:**\n- General javascript Event System.\n- inter-component communication channel for ReactJs.\n\nYou can think of it as a network between components.\n\n**What This is not:**\n- client-server communication library\n- client-client communication library\n\n**Why?**<br />\nBecause passing down methods to child components cluters your code.\n```bash\nand monolithic.. \n```\n\n---\n\nInitialize\n--\n```js\nimport ReactObserver from \'react-observer\';\nvar observer = ReactObserver();\n```\n\nMethods: PubSub\n--\n```js\n/* subscribe to event */\nobserver.subscribe(\'exampleEvent\',(data)=>{\n    console.log(\'data is: \'+data);\n});\n\n/* publish event */\nobserver.publish(\'exampleEvent\', 1+9);\n// data is: 10\n\n/* unsub */\nobserver.unsubscribe(\'exampleEvent\');\n```\n\nMethods: request-response\n--\n```js\n/* prepare to respond to answer */\nobserver.respond(\'what is three\',()=>{\n    return 3;\n});\n\n/* ask the question */\nobserver.ask(\'what is three\',(data)=>{\n    console.log(\'Three is a \' + (typeof data));\n});\n// Three is a number\n\n\n/* stop responding to questions */\nobserver.silence(\'what is three\');\n\n```\n\n---\n\nUsage Example\n--\nInclude react-observer in your Parent Component\n```js\nimport ReactObserver from \'react-observer\';\n```\n\n### Initialize in parent\nInitialize in Parent constructor, and pass down to child components\n```js\nclass App extends Component {\n  constructor(props){\n      super(props);\n      this.observer = ReactObserver();\n  }\n  ...\n  \n  render(){\n        <div>\n            <AppChild observer={this.observer} />\n            <AppChild observer={this.observer} />\n            <AppChildCounter observer={this.observer} />\n        </div>\n    }\n}\n```\n\n### Subscribe / publish events\nIn Child Components, start listening to events on mount. Don\'t forget to unsubscribe on unmount.\n\n**AppChild**\n```js\nclass AppChild extends Component{\n    constructor(props){\n        super(props);\n        this.observer = props.observer;\n    }\n    \n    componentDidMount(){\n        this.observer.subscribe("hello",(data)=>{\n            console.log(\'hello event data: \' + data);\n        });\n        \n        this.observer.respond("attendanceRoll",()=>{\n            return 1;\n        });\n    }\n\n    componentWillUnmount(){\n        this.observer.silence("attendanceRoll");\n    }\n    ...\n}\n```\n\n`AppChildCounter` is where we will publish event or ask questions.\n\n**AppChildCounter**\n```js\nclass AppChildCounter extends Component{\n    constructor(props){\n        super(props);\n        this.observer = props.observer;\n        this.state = {attending : 0};\n    }\n    \n    componentDidMount(){\n        this.observer.publish("hello",\'this is data\');\n        this.observer.ask("attendanceRoll",(data)=>{\n            this.setState( (prev,props)=>({ attending: prev.attending + data }) );\n            console.log(\'attending: \'+this.state.attending);\n        });\n    }\n    ...\n}\n```\n\nCheck the result in your console\n```\nConsole\n=======\n\nhello event data: this is data\nhello event data: this is data\nattending: 2\n```\n\n---\n\nFeature: event-namespace\n--\nThe dot (`.`) is used as a namespace separator.\n```js\nobserver.subscribe(\'main\',()=>{ console.log(\'main\'); });\nobserver.subscribe(\'main.child\',()=>{ console.log(\'main.child\'); });\nobserver.subscribe(\'main.child.child\',()=>{ console.log(\'main.child.child\'); });\n\n/* all child and grandchild will be called on parent invocation */\nobserver.publish(\'main\');\n// main\n// main.child\n// main.child.child\n\nobserver.publish(\'main.child\');\n// main.child\n// main.child.child\n\n/* the same goes for unsubscribe method */\nobserver.unsubscribe(\'main.child\',()=>{ console.log(\'main\'); });\nobserver.publish(\'main\');\n// main\n```\n\ncheers,\n[him@jujiyangasli.com](mailto:him@jujiyangasli.com)',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '35e5a3f8d56bb9f929e88eef015ea73fc9c18ec7',
21 silly publish   _id: 'react-observer@0.1.0',
21 silly publish   _shasum: 'efa63e018487f67c9adff6b6732497a453e3de13',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name react-observer
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'react-observer',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'react-observer',
26 silly mapToRegistry   name: 'react-observer',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/react-observer
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /home/juji/.npm/react-observer/0.1.0/package.tgz
30 verbose request uri https://registry.npmjs.org/react-observer
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 1:57:28 AM
33 verbose request using bearer token for auth
34 verbose request id 50096ce4d863f3f5
35 http request PUT https://registry.npmjs.org/react-observer
36 http 403 https://registry.npmjs.org/react-observer
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '108',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 01 Jun 2017 18:57:30 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-sea1045-SEA',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1496343450.280396,VS0,VE53',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /home/juji/.npm/registry.npmjs.org/react-observer on PUT
39 error publish Failed PUT 403
40 verbose stack Error: you do not have permission to publish "react-observer". Are you logged in as the correct user? : react-observer
40 verbose stack     at makeError (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid react-observer
43 verbose cwd /media/files/work/repo/react-observer
44 error Linux 4.8.0-53-generic
45 error argv "/usr/bin/nodejs" "/usr/bin/npm" "publish"
46 error node v6.10.3
47 error npm  v3.10.10
48 error code E403
49 error you do not have permission to publish "react-observer". Are you logged in as the correct user? : react-observer
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
